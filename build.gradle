plugins {
    id 'jacoco'
    id 'idea'
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id 'java'
    id 'war'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'utf8'
compileTestJava.options.encoding = 'utf8'
javadoc.options.encoding = 'utf8'

repositories {
    gradlePluginPortal()

}

dependencies {
    apply plugin: "io.spring.dependency-management"
    dependencyManagement {
        dependencies {
            imports {
                mavenBom("org.springframework.boot:spring-boot-dependencies:2.3.10.RELEASE")
            }

        }
    }

    implementation 'org.apache.logging.log4j:log4j-core'
    implementation 'org.apache.logging.log4j:log4j-api'
    implementation 'mysql:mysql-connector-java'
    implementation 'com.h2database:h2'

    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    compileOnly group: 'javax.servlet.jsp', name: 'jsp-api', version: '2.2'
    implementation group: 'javax.servlet.jsp.jstl', name: 'jstl-api', version: '1.2'
    implementation group: 'javax.servlet', name: 'jstl', version: '1.2'
    implementation group: 'jstl', name: 'jstl', version: '1.2'


    compile 'org.thymeleaf:thymeleaf:3.0.0.ALPHA03'

    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.8.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.8.0'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.8.0'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.7.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.7.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.0'
    testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.7.0'
    implementation group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.7.0'
}

jacoco {
    toolVersion = "0.8.6"
    reportsDir = file("$buildDir/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }

    finalizedBy jacocoTestReport // report is always generated after tests run

    task hello {
        println 'Hello Servlet!'
        println System.getenv('JAVA_HOME')
    }
}